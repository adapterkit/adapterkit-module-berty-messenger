syntax = "proto3";
option go_package = "./;messenger";

service MessengerSvc {
  rpc GetContactPubkey(GetContactPubkeyReq) returns(GetContactPubkeyRes) {};
  rpc GetContactRequests(GetContactRequestsReq) returns(GetContactRequestsRes) {};
  rpc SendContactRequest(SendContactRequestReq) returns(SendContactRequestRes) {};
  rpc AcceptContactRequest(AcceptContactRequestReq) returns(AcceptContactRequestRes) {};
  rpc SendMessage(SendMessageReq) returns(SendMessageRes) {};
  rpc ListMessages(ListMessagesReq) returns(stream ListMessagesRes) {};
  rpc CreateGroup(CreateGroupReq) returns(CreateGroupRes) {};
  rpc JoinGroup(JoinGroupReq) returns(JoinGroupRes) {};
}


message GetContactPubkeyReq {};

message GetContactPubkeyRes {
  string pubkey = 1;
  string rdvSeed = 2;
}

message GetContactRequestsReq {};

message GetContactRequestsRes {
  message ContactRequest {
    string name = 1;
    string public_key = 2;
  }
  repeated ContactRequest contact_requests = 1;
}

message SendContactRequestReq {
  string pubkey = 1;
  string rdvSeed = 2;
  string name = 3;
}

message SendContactRequestRes {
  bool success = 1;
};

message AcceptContactRequestReq {
  string pubkey = 1;
};

message AcceptContactRequestRes {
  bool success = 1;
};

message SendMessageReq {
  string pubkey = 1;
  string message = 2;
  bool isContact = 3;
};

message SendMessageRes {
  bool success = 1;
};

message ListMessagesReq {
  string pubkey = 1;
  bool isContact = 2;
};

message ListMessagesRes {
  string id = 1;
  string message = 2;
}

message CreateGroupReq {}

message CreateGroupRes {
  string groupPk = 1;
  string groupInvitation = 2;
}

message JoinGroupReq {
  string groupInvitation = 1;
}

message JoinGroupRes {
  bool success = 1;
  string groupPk = 2;
}
